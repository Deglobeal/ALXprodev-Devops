#!/bin/bash

# Pokémon list
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
output_dir="pokemon_data"
mkdir -p "$output_dir"

# Error log
error_log="error_log_parallel.txt"
> "$error_log"

# Function to fetch a Pokémon
fetch_pokemon() {
    local pokemon=$1
    local output_file="$output_dir/${pokemon}.json"
    local url="https://pokeapi.co/api/v2/pokemon/${pokemon}"

    echo "Fetching data for $pokemon..."

    response_code=$(curl -s -w "%{http_code}" -o "$output_file" "$url")

    if [ "$response_code" -eq 200 ]; then
        echo "Saved data to $output_file ✅"
    else
        echo "❌ Failed to fetch data for $pokemon (HTTP $response_code)" | tee -a "$error_log"
        [ -f "$output_file" ] && rm "$output_file"
    fi
}

# Start background jobs
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Use 'jobs' to monitor background tasks
echo
echo "=== Active Jobs ==="
jobs

# Wait for all background jobs to finish
wait

# Re-check background jobs (should be empty if all completed)
echo
echo "=== Jobs After Wait ==="
jobs

echo
echo "✅ All fetches completed."
